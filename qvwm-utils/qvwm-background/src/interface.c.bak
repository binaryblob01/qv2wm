/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)

GtkWidget*
create_window1 (void)
{
  GtkWidget *window1;
  GtkWidget *vbox1;
  GtkWidget *menubar1;
  GtkWidget *menuitem1;
  GtkWidget *menuitem1_menu;
  GtkWidget *separatormenuitem1;
  GtkWidget *quit1;
  GtkWidget *menuitem4;
  GtkWidget *menuitem4_menu;
  GtkWidget *about1;
  GtkWidget *vbox2;
  GtkWidget *fixed1;
  GtkWidget *entry1;
  GtkWidget *button3;
  GtkWidget *button1;
  GtkWidget *button2;
  GtkWidget *image2;
  GtkWidget *label2;
  GtkWidget *label1;
  GtkWidget *hseparator1;
  GtkWidget *image1;
  GtkWidget *optionmenu1;
  GtkWidget *menu1;
  GtkWidget *center1;
  GtkWidget *top1;
  GtkWidget *bottom1;
  GtkWidget *left1;
  GtkWidget *right1;
  GtkWidget *topleft1;
  GtkWidget *topright1;
  GtkWidget *bottomleft1;
  GtkWidget *bottomright1;
  GtkWidget *statusbar1;
  GtkAccelGroup *accel_group;

  accel_group = gtk_accel_group_new ();

  window1 = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (window1, 380, 380);
  gtk_window_set_title (GTK_WINDOW (window1), _("Qvwm Background Changer"));
  gtk_window_set_position (GTK_WINDOW (window1), GTK_WIN_POS_CENTER);
  gtk_window_set_resizable (GTK_WINDOW (window1), FALSE);

  vbox1 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox1);
  gtk_container_add (GTK_CONTAINER (window1), vbox1);

  menubar1 = gtk_menu_bar_new ();
  gtk_widget_show (menubar1);
  gtk_box_pack_start (GTK_BOX (vbox1), menubar1, FALSE, FALSE, 0);

  menuitem1 = gtk_menu_item_new_with_mnemonic (_("_File"));
  gtk_widget_show (menuitem1);
  gtk_container_add (GTK_CONTAINER (menubar1), menuitem1);

  menuitem1_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem1), menuitem1_menu);

  separatormenuitem1 = gtk_menu_item_new ();
  gtk_widget_show (separatormenuitem1);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), separatormenuitem1);
  gtk_widget_set_sensitive (separatormenuitem1, FALSE);

  quit1 = gtk_image_menu_item_new_from_stock ("gtk-quit", accel_group);
  gtk_widget_show (quit1);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), quit1);

  menuitem4 = gtk_menu_item_new_with_mnemonic (_("_Help"));
  gtk_widget_show (menuitem4);
  gtk_container_add (GTK_CONTAINER (menubar1), menuitem4);

  menuitem4_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem4), menuitem4_menu);

  about1 = gtk_menu_item_new_with_mnemonic (_("_About"));
  gtk_widget_show (about1);
  gtk_container_add (GTK_CONTAINER (menuitem4_menu), about1);

  vbox2 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox2);
  gtk_box_pack_start (GTK_BOX (vbox1), vbox2, TRUE, TRUE, 0);

  fixed1 = gtk_fixed_new ();
  gtk_widget_show (fixed1);
  gtk_box_pack_start (GTK_BOX (vbox2), fixed1, TRUE, TRUE, 0);

  entry1 = gtk_entry_new ();
  gtk_widget_show (entry1);
  gtk_fixed_put (GTK_FIXED (fixed1), entry1, 120, 264);
  gtk_widget_set_size_request (entry1, 224, 24);

  button3 = gtk_button_new_from_stock ("gtk-close");
  gtk_widget_show (button3);
  gtk_fixed_put (GTK_FIXED (fixed1), button3, 248, 296);
  gtk_widget_set_size_request (button3, 88, 32);

  button1 = gtk_button_new_from_stock ("gtk-save");
  gtk_widget_show (button1);
  gtk_fixed_put (GTK_FIXED (fixed1), button1, 48, 296);
  gtk_widget_set_size_request (button1, 96, 32);

  button2 = gtk_button_new ();
  gtk_widget_show (button2);
  gtk_fixed_put (GTK_FIXED (fixed1), button2, 344, 264);
  gtk_widget_set_size_request (button2, 24, 24);

  image2 = gtk_image_new_from_stock ("gtk-floppy", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image2);
  gtk_container_add (GTK_CONTAINER (button2), image2);

  label2 = gtk_label_new (_("Position :"));
  gtk_widget_show (label2);
  gtk_fixed_put (GTK_FIXED (fixed1), label2, 8, 240);
  gtk_widget_set_size_request (label2, 96, 16);
  gtk_label_set_line_wrap (GTK_LABEL (label2), TRUE);

  label1 = gtk_label_new (_("Picture :"));
  gtk_widget_show (label1);
  gtk_fixed_put (GTK_FIXED (fixed1), label1, 8, 272);
  gtk_widget_set_size_request (label1, 96, 16);
  gtk_label_set_line_wrap (GTK_LABEL (label1), TRUE);

  hseparator1 = gtk_hseparator_new ();
  gtk_widget_show (hseparator1);
  gtk_fixed_put (GTK_FIXED (fixed1), hseparator1, 8, 208);
  gtk_widget_set_size_request (hseparator1, 368, 16);

  image1 = gtk_image_new_from_stock ("gtk-missing-image", GTK_ICON_SIZE_DIALOG);
  gtk_widget_show (image1);
  gtk_fixed_put (GTK_FIXED (fixed1), image1, 8, 8);
  gtk_widget_set_size_request (image1, 370, 200);

  optionmenu1 = gtk_option_menu_new ();
  gtk_widget_show (optionmenu1);
  gtk_fixed_put (GTK_FIXED (fixed1), optionmenu1, 176, 232);
  gtk_widget_set_size_request (optionmenu1, 192, 26);
  gtk_container_set_border_width (GTK_CONTAINER (optionmenu1), 1);

  menu1 = gtk_menu_new ();

  center1 = gtk_menu_item_new_with_mnemonic (_("Center"));
  gtk_widget_show (center1);
  gtk_container_add (GTK_CONTAINER (menu1), center1);

  top1 = gtk_menu_item_new_with_mnemonic (_("Top"));
  gtk_widget_show (top1);
  gtk_container_add (GTK_CONTAINER (menu1), top1);

  bottom1 = gtk_menu_item_new_with_mnemonic (_("Bottom"));
  gtk_widget_show (bottom1);
  gtk_container_add (GTK_CONTAINER (menu1), bottom1);

  left1 = gtk_menu_item_new_with_mnemonic (_("Left"));
  gtk_widget_show (left1);
  gtk_container_add (GTK_CONTAINER (menu1), left1);

  right1 = gtk_menu_item_new_with_mnemonic (_("Right"));
  gtk_widget_show (right1);
  gtk_container_add (GTK_CONTAINER (menu1), right1);

  topleft1 = gtk_menu_item_new_with_mnemonic (_("TopLeft"));
  gtk_widget_show (topleft1);
  gtk_container_add (GTK_CONTAINER (menu1), topleft1);

  topright1 = gtk_menu_item_new_with_mnemonic (_("TopRight"));
  gtk_widget_show (topright1);
  gtk_container_add (GTK_CONTAINER (menu1), topright1);

  bottomleft1 = gtk_menu_item_new_with_mnemonic (_("BottomLeft"));
  gtk_widget_show (bottomleft1);
  gtk_container_add (GTK_CONTAINER (menu1), bottomleft1);

  bottomright1 = gtk_menu_item_new_with_mnemonic (_("BottomRight"));
  gtk_widget_show (bottomright1);
  gtk_container_add (GTK_CONTAINER (menu1), bottomright1);

  gtk_option_menu_set_menu (GTK_OPTION_MENU (optionmenu1), menu1);

  statusbar1 = gtk_statusbar_new ();
  gtk_widget_show (statusbar1);
  gtk_box_pack_start (GTK_BOX (vbox1), statusbar1, FALSE, FALSE, 0);

  g_signal_connect ((gpointer) window1, "delete_event",
                    G_CALLBACK (on_window1_delete_event),
                    NULL);
  g_signal_connect ((gpointer) window1, "destroy_event",
                    G_CALLBACK (on_window1_destroy_event),
                    NULL);
  g_signal_connect ((gpointer) window1, "show",
                    G_CALLBACK (on_window1_show),
                    NULL);
  g_signal_connect ((gpointer) quit1, "activate",
                    G_CALLBACK (on_quit1_activate),
                    NULL);
  g_signal_connect ((gpointer) about1, "activate",
                    G_CALLBACK (on_about1_activate),
                    NULL);
  g_signal_connect ((gpointer) entry1, "changed",
                    G_CALLBACK (on_entry1_changed),
                    NULL);
  g_signal_connect ((gpointer) button3, "clicked",
                    G_CALLBACK (on_button3_clicked),
                    NULL);
  g_signal_connect ((gpointer) button1, "clicked",
                    G_CALLBACK (on_button1_clicked),
                    NULL);
  g_signal_connect ((gpointer) button2, "clicked",
                    G_CALLBACK (on_button2_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window1, window1, "window1");
  GLADE_HOOKUP_OBJECT (window1, vbox1, "vbox1");
  GLADE_HOOKUP_OBJECT (window1, menubar1, "menubar1");
  GLADE_HOOKUP_OBJECT (window1, menuitem1, "menuitem1");
  GLADE_HOOKUP_OBJECT (window1, menuitem1_menu, "menuitem1_menu");
  GLADE_HOOKUP_OBJECT (window1, separatormenuitem1, "separatormenuitem1");
  GLADE_HOOKUP_OBJECT (window1, quit1, "quit1");
  GLADE_HOOKUP_OBJECT (window1, menuitem4, "menuitem4");
  GLADE_HOOKUP_OBJECT (window1, menuitem4_menu, "menuitem4_menu");
  GLADE_HOOKUP_OBJECT (window1, about1, "about1");
  GLADE_HOOKUP_OBJECT (window1, vbox2, "vbox2");
  GLADE_HOOKUP_OBJECT (window1, fixed1, "fixed1");
  GLADE_HOOKUP_OBJECT (window1, entry1, "entry1");
  GLADE_HOOKUP_OBJECT (window1, button3, "button3");
  GLADE_HOOKUP_OBJECT (window1, button1, "button1");
  GLADE_HOOKUP_OBJECT (window1, button2, "button2");
  GLADE_HOOKUP_OBJECT (window1, image2, "image2");
  GLADE_HOOKUP_OBJECT (window1, label2, "label2");
  GLADE_HOOKUP_OBJECT (window1, label1, "label1");
  GLADE_HOOKUP_OBJECT (window1, hseparator1, "hseparator1");
  GLADE_HOOKUP_OBJECT (window1, image1, "image1");
  GLADE_HOOKUP_OBJECT (window1, optionmenu1, "optionmenu1");
  GLADE_HOOKUP_OBJECT (window1, menu1, "menu1");
  GLADE_HOOKUP_OBJECT (window1, center1, "center1");
  GLADE_HOOKUP_OBJECT (window1, top1, "top1");
  GLADE_HOOKUP_OBJECT (window1, bottom1, "bottom1");
  GLADE_HOOKUP_OBJECT (window1, left1, "left1");
  GLADE_HOOKUP_OBJECT (window1, right1, "right1");
  GLADE_HOOKUP_OBJECT (window1, topleft1, "topleft1");
  GLADE_HOOKUP_OBJECT (window1, topright1, "topright1");
  GLADE_HOOKUP_OBJECT (window1, bottomleft1, "bottomleft1");
  GLADE_HOOKUP_OBJECT (window1, bottomright1, "bottomright1");
  GLADE_HOOKUP_OBJECT (window1, statusbar1, "statusbar1");

  gtk_window_add_accel_group (GTK_WINDOW (window1), accel_group);

  return window1;
}

GtkWidget*
create_fileselection1 (void)
{
  GtkWidget *fileselection1;
  GtkWidget *ok_button1;
  GtkWidget *cancel_button1;

  fileselection1 = gtk_file_selection_new (_("Select Image for Desktop"));
  gtk_container_set_border_width (GTK_CONTAINER (fileselection1), 10);
  gtk_window_set_position (GTK_WINDOW (fileselection1), GTK_WIN_POS_CENTER);
  gtk_window_set_modal (GTK_WINDOW (fileselection1), TRUE);
  gtk_window_set_type_hint (GTK_WINDOW (fileselection1), GDK_WINDOW_TYPE_HINT_DIALOG);

  ok_button1 = GTK_FILE_SELECTION (fileselection1)->ok_button;
  gtk_widget_show (ok_button1);
  GTK_WIDGET_SET_FLAGS (ok_button1, GTK_CAN_DEFAULT);

  cancel_button1 = GTK_FILE_SELECTION (fileselection1)->cancel_button;
  gtk_widget_show (cancel_button1);
  GTK_WIDGET_SET_FLAGS (cancel_button1, GTK_CAN_DEFAULT);

  g_signal_connect ((gpointer) fileselection1, "close",
                    G_CALLBACK (on_fileselection1_close),
                    NULL);
  g_signal_connect ((gpointer) ok_button1, "clicked",
                    G_CALLBACK (on_ok_button1_clicked),
                    NULL);
  g_signal_connect ((gpointer) cancel_button1, "clicked",
                    G_CALLBACK (on_cancel_button1_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (fileselection1, fileselection1, "fileselection1");
  GLADE_HOOKUP_OBJECT_NO_REF (fileselection1, ok_button1, "ok_button1");
  GLADE_HOOKUP_OBJECT_NO_REF (fileselection1, cancel_button1, "cancel_button1");

  return fileselection1;
}

GtkWidget*
create_window2 (void)
{
  GtkWidget *window2;
  GtkWidget *fixed2;
  GtkWidget *button4;
  GtkWidget *label4;
  GtkWidget *label3;

  window2 = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (window2, 250, 170);
  gtk_window_set_title (GTK_WINDOW (window2), _("About"));
  gtk_window_set_position (GTK_WINDOW (window2), GTK_WIN_POS_CENTER);
  gtk_window_set_resizable (GTK_WINDOW (window2), FALSE);

  fixed2 = gtk_fixed_new ();
  gtk_widget_show (fixed2);
  gtk_container_add (GTK_CONTAINER (window2), fixed2);

  button4 = gtk_button_new_from_stock ("gtk-close");
  gtk_widget_show (button4);
  gtk_fixed_put (GTK_FIXED (fixed2), button4, 80, 128);
  gtk_widget_set_size_request (button4, 88, 24);

  label4 = gtk_label_new_with_mnemonic (_("Qvwm Background Changer"));
  gtk_widget_show (label4);
  gtk_fixed_put (GTK_FIXED (fixed2), label4, 40, 8);
  gtk_widget_set_size_request (label4, 176, 16);
  gtk_label_set_use_markup (GTK_LABEL (label4), TRUE);

  label3 = gtk_label_new (_("2003-2007 (c) M.Ali VARDAR\nThis program under GPL licence"));
  gtk_widget_show (label3);
  gtk_fixed_put (GTK_FIXED (fixed2), label3, 24, 32);
  gtk_widget_set_size_request (label3, 208, 72);

  g_signal_connect ((gpointer) window2, "delete_event",
                    G_CALLBACK (on_window2_delete_event),
                    NULL);
  g_signal_connect ((gpointer) window2, "destroy_event",
                    G_CALLBACK (on_window2_destroy_event),
                    NULL);
  g_signal_connect ((gpointer) button4, "clicked",
                    G_CALLBACK (on_button4_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window2, window2, "window2");
  GLADE_HOOKUP_OBJECT (window2, fixed2, "fixed2");
  GLADE_HOOKUP_OBJECT (window2, button4, "button4");
  GLADE_HOOKUP_OBJECT (window2, label4, "label4");
  GLADE_HOOKUP_OBJECT (window2, label3, "label3");

  return window2;
}

GtkWidget*
create_dialog1 (void)
{
  GtkWidget *dialog1;
  GtkWidget *dialog_vbox1;
  GtkWidget *fixed3;
  GtkWidget *label5;
  GtkWidget *dialog_action_area1;
  GtkWidget *okbutton1;

  dialog1 = gtk_dialog_new ();
  gtk_window_set_title (GTK_WINDOW (dialog1), _("Warning"));
  gtk_window_set_position (GTK_WINDOW (dialog1), GTK_WIN_POS_CENTER);
  gtk_window_set_modal (GTK_WINDOW (dialog1), TRUE);
  gtk_window_set_destroy_with_parent (GTK_WINDOW (dialog1), TRUE);
  gtk_window_set_type_hint (GTK_WINDOW (dialog1), GDK_WINDOW_TYPE_HINT_DIALOG);

  dialog_vbox1 = GTK_DIALOG (dialog1)->vbox;
  gtk_widget_show (dialog_vbox1);

  fixed3 = gtk_fixed_new ();
  gtk_widget_show (fixed3);
  gtk_box_pack_start (GTK_BOX (dialog_vbox1), fixed3, TRUE, TRUE, 0);

  label5 = gtk_label_new (_("Background Setting successfully saved. "));
  gtk_widget_show (label5);
  gtk_fixed_put (GTK_FIXED (fixed3), label5, 32, 8);
  gtk_widget_set_size_request (label5, 288, 56);

  dialog_action_area1 = GTK_DIALOG (dialog1)->action_area;
  gtk_widget_show (dialog_action_area1);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (dialog_action_area1), GTK_BUTTONBOX_END);

  okbutton1 = gtk_button_new_from_stock ("gtk-ok");
  gtk_widget_show (okbutton1);
  gtk_dialog_add_action_widget (GTK_DIALOG (dialog1), okbutton1, GTK_RESPONSE_OK);
  GTK_WIDGET_SET_FLAGS (okbutton1, GTK_CAN_DEFAULT);

  g_signal_connect ((gpointer) okbutton1, "clicked",
                    G_CALLBACK (on_okbutton1_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (dialog1, dialog1, "dialog1");
  GLADE_HOOKUP_OBJECT_NO_REF (dialog1, dialog_vbox1, "dialog_vbox1");
  GLADE_HOOKUP_OBJECT (dialog1, fixed3, "fixed3");
  GLADE_HOOKUP_OBJECT (dialog1, label5, "label5");
  GLADE_HOOKUP_OBJECT_NO_REF (dialog1, dialog_action_area1, "dialog_action_area1");
  GLADE_HOOKUP_OBJECT (dialog1, okbutton1, "okbutton1");

  return dialog1;
}

